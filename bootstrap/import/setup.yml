---
- name: Machine setup
  hosts: localhost
  connection: local
  gather_facts: true

  tasks:
    - name: Ensure custom zsh profile is loaded
      ansible.builtin.lineinfile:
        path: "{{ ansible_env.HOME }}/.zshrc"
        line: "source ~/.zsh_profile"
        create: yes

    - name: Download zellij plugins
      block:
        - name: Ensure plugin directory exists
          ansible.builtin.file:
            path: "{{ zellij_plugin_dir }}"
            state: directory
            mode: '0755'

        - name: Download plugins if they don't exist
          ansible.builtin.get_url:
            url: "{{ item.value }}"
            dest: "{{ zellij_plugin_dir }}/{{ item.key }}.wasm"
            mode: '0644'
          loop: "{{ zellij_plugins | dict2items }}"
          loop_control:
            label: "{{ item.key }}"
      vars:
        zellij_plugin_dir: "{{ ansible_env.HOME }}/.config/zellij/plugins"
        zellij_plugins:
          zellij_forgot: "https://github.com/karimould/zellij-forgot/releases/latest/download/zellij_forgot.wasm"
          zjstatus: "https://github.com/dj95/zjstatus/releases/latest/download/zjstatus.wasm"

    - name: Configure bat theme
      block:
        - name: Chech if bat is installed
          ansible.builtin.command: which bat
          register: bat_check
          failed_when: bat_check.rc != 0
          changed_when: false

        - name: Get bat config directory
          ansible.builtin.command: bat --config-dir
          register: bat_config
          changed_when: false

        - name: Set theme directory and path
          ansible.builtin.set_fact:
            bat_theme_dir: "{{ bat_config.stdout }}/themes"
            bat_theme_file: "{{ bat_config.stdout }}/themes/{{ bat_theme_name }}"

        - name: Ensure themes directory exists
          ansible.builtin.file:
            path: "{{ bat_theme_dir }}"
            state: directory
            mode: '0755'

        - name: Download the theme if it doesn't exist
          ansible.builtin.get_url:
            url: "{{ bat_theme_url }}"
            dest: "{{ bat_theme_file }}"
            mode: '0644'
          register: downloaded_bat_theme

        - name: Rebuild bat cache
          ansible.builtin.command: bat cache --build
          when: downloaded_bat_theme.changed
      vars:
        bat_theme_url: "https://github.com/catppuccin/bat/raw/main/themes/Catppuccin%20Mocha.tmTheme"
        bat_theme_name: "Catppuccin Mocha.tmTheme"

    - name: Install and configure Flatpaks
      when: ansible_distribution == "Fedora"
      block:
        - name: Install Flatpaks
          community.general.flatpak:
            name:
              - app.zen_browser.zen
              - com.brave.Browser
              - com.spotify.Client
              - org.wezfurlong.wezterm

        - name: Copy Zen Browser theme
          ansible.builtin.script: ./zen_browser.py
          register: result
          failed_when: result.rc not in [0, 2]
          changed_when: result.rc == 0

    - name: Copy desktop background
      ansible.builtin.copy:
        src: ../tree.jpg
        dest: "{{ ansible_env.HOME }}/Pictures/tree.jpg"
        mode: '0644'

    - name: Import gnome dconf
      include_tasks: dconf_apply.yml
      loop: "{{ dconfs | dict2items }}"
      loop_control:
        loop_var: dconf_item
        label: "{{ dconf_item.key }}"
      vars:
        temp_current_dconf: "/tmp/current_gnome_config.dconf"
        dconfs:
          wm: "/org/gnome/desktop/wm/"
          background: "/org/gnome/desktop/background/"
          screensaver: "/org/gnome/desktop/screensaver/"
          interface: "/org/gnome/desktop/interface/"
          shell: "/org/gnome/shell/"
        dconf_path: "{{ dconf_item.value }}"
        tracked_dconf: "../track/gnome/{{ dconf_item.key }}.ini"
      when: ansible_distribution == "Fedora"
