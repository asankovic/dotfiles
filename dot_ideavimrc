" ============================ Leader key  =============================
noremap <SPACE> <Nop>
let mapleader=" "
" ======================================================================

" ========================== Common settings  ==========================
set visualbell
set mouse=a
set updatetime=250

set list
set listchars=tab:»\ ,extends:›,precedes:‹,nbsp:·,trail:·

set relativenumber
set number

set tabstop=2
set shiftwidth=2
set expandtab
" set autoindent
" set smartindent
set shiftround
set breakindent
set scrolloff=10
set sidescrolloff=5

set cursorline
set nowrap
set showmode

set ignorecase
set smartcase
set nohlsearch
set incsearch
" ======================================================================

" ========================== General remaps  ===========================
"" Show register content (in IntelliJ using peakaboo plugin)
nnoremap <silent> "" :registers "0123456789abcdefghijklmnopqrstuvwxyz*+.<CR>

inoremap jk <ESC>

nnoremap Q <Nop>
nnoremap U <C-r>

nnoremap <leader>hl :set hlsearch!<CR>
nnoremap <leader>nn :set relativenumber!<CR>
"" Redundant, but keeping consistent with Neovim
nnoremap <leader>th :set hlsearch!<CR>
nnoremap <leader>tn :set relativenumber!<CR>

nnoremap L g_
nnoremap H ^
xnoremap L g_
xnoremap H ^
onoremap L g_
onoremap H ^

nmap zj o<ESC>k
nmap zk O<ESC>j

xnoremap < <gv
xnoremap > >gv
xnoremap = =gv
nnoremap == gg<S-v>G

"" Toggle case and start typing
map <leader>ui ~hi
"" Remove selection and toggle case
xmap <leader>ud d~h

" Search for highlighted text
vnoremap // "sy/<C-R>s<CR>

nnoremap <leader>y "+y
vnoremap <leader>y "+y

nnoremap <leader>p "+p
vnoremap <leader>p "+p

" Move selected line up or down
vnoremap K :m '<-2<CR>gv=gv
vnoremap J :m '>+1<CR>gv=gv

" Join line without losing the cursor position
nnoremap J mzJ`z

" Scroll up and down keeping the screen aligned
nnoremap <C-d> <C-d>zz
nnoremap <C-u> <C-u>zz

" Keep the selection in the middle of the screen
nnoremap n nzzzv
nnoremap N Nzzzv
" ======================================================================

if has("ide")
        " =========================== Idea specific  ===========================
        set ideajoin
        set ideamarks
        set ideastatusicon=gray
        set idearefactormode=keep
        " ----------------------------------------------------------------------

        " ------------------------------ Plugins  ------------------------------
        " https://github.com/JetBrains/ideavim/wiki/IdeaVim-Plugins
        " set which-key
        set NERDTree
        set ReplaceWithRegister
        set argtextobj
        set commentary
        set easymotion
        set exchange
        set functiontextobj
        set highlightedyank
        set mini-ai
        set multiple-cursors
        set peekaboo
        set quickscope
        set surround
        set textobj-entire
        set textobj-indent
        set vim-paragraph-motion

        " ArgTextObjPairs
        let g:argtextobj_pairs = "[:],(:),<:>"

        " Highlighted yank
        let g:highlightedyank_highlight_color = "rgba(202, 148, 226, 155)"

        " QuickScope
        let g:qs_primary_color = "#F38BA8"
        let g:qs_secondary_color = "#EBA0AC"
        let g:qs_highlight_on_keys = ['f', 'F', 't', 'T']

        " EasyMotion
        let g:EasyMotion_do_mapping = 0
        nmap <CR> <Plug>(easymotion-jumptoanywhere)

        " Exchange
        let g:exchange_indent = "=="
        nmap gx <Plug>(Exchange)
        xmap X <Plug>(Exchange)
        nmap gxc <Plug>(ExchangeClear)
        nmap gxx <Plug>(ExchangeLine)

        " NERDTree
        nmap <leader>ee :NERDTree <CR>
        nmap <leader>et :NERDTreeToggle <CR>

        " Surround
        let g:surround_no_mappings = 1
        let g:surround_no_insert_mappings = 1
        nmap sa <Plug>YSurround
        xmap sa <Plug>VSurround
        nmap sd <Plug>DSurround
        nmap sr <Plug>CSurround

        " Multiple-cursors
        nmap <C-n> <Plug>NextWholeOccurrence
        xmap <C-n> <Plug>NextWholeOccurrence
        nmap g<C-n> <Plug>NextOccurrence
        xmap g<C-n> <Plug>NextOccurrence
        xmap <C-x> <Plug>SkipOccurrence
        xmap <C-p> <Plug>RemoveOccurrence
        nmap <leader><C-n> <Plug>AllWholeOccurrences
        xmap <leader><C-n> <Plug>AllWholeOccurrences
        nmap <leader>g<C-n> <Plug>AllOccurrences
        xmap <leader>g<C-n> <Plug>AllOccurrences
        " ----------------------------------------------------------------------

        " -------------------------- Intellij Actions  -------------------------
        " https://jb.gg/abva4t
        "" Navigation
        nmap <C-o> <Action>(Back)
        nmap <C-i> <Action>(Forward)
        nmap [[ <Action>(MethodUp)
        nmap ]] <Action>(MethodDown)
        nmap gs <Action>(GotoSuperMethod)
        nmap gI <Action>(GotoImplementation)
        nmap g; <Action>(JumpToLastChange)
        nmap g, <Action>(JumpToNextChange)
        nmap gd <Action>(GotoDeclaration)
        nmap gt <Action>(GotoTypeDeclaration)
        nmap gT <Action>(GotoTest)

        nmap g: <Action>(GotoAction)
        nmap <leader>fe <Action>(RecentFiles)
        map <leader>fc <Action>(GotoClass)
        map <leader>ff <Action>(GotoFile)
        map <leader>fa <Action>(FindInPath)
        nmap <leader>fs <Action>(FileStructurePopup)

        "" Usages
        nmap <leader>fU <Action>(FindUsages)
        nmap <leader>fu <Action>(ShowUsages)

        "" Running
        nmap <leader>rr <Action>(Run)
        nmap <leader>rs <Action>(Stop)
        nmap <leader>rd <Action>(Debug)
        nmap <leader>rc <Action>(RunClass)

        "" Generating
        nmap <leader>. <Action>(NewScratchBuffer)
        nmap <leader>ge <Action>(Generate)
        map ga <Action>(ShowIntentionActions)

        "" Formatting & Refactoring
        nmap <leader>fo <Action>(ReformatCode)<Action>(OptimizeImports)
        xmap <leader>fo <Action>(ReformatCode)
        nmap <leader>fd <Action>(ShowReformatFileDialog)
        map <leader>re <Action>(RenameElement)
        map <leader>rr <Action>(Refactorings.QuickListPopupAction)
        map <leader>rs <Action>(SurroundWith)

        "" Quick manipulating lines
        xmap K <Action>(MoveLineUp)
        xmap J <Action>(MoveLineDown)
        nmap J <Action>(EditorJoinLines)

        "" Code completion
        imap <C-j> <Action>(CodeCompletion)
        "map <C-l> <Action>(EditorCompleteStatement) " in IDE settings to work with AI word accept (same key)

        "" Windows and editor tabs
        nnoremap gk gt
        nnoremap gj gT
        nmap <C-q> <Action>(CloseEditor)

        "" Hierarchies
        nmap <leader>hc <Action>(CallHierarchy)
        nmap <leader>ht <Action>(TypeHierarchy)
        nmap <leader>hm <Action>(MethodHierarchy)

        "" Bookmarks
        nmap <C-m> <Action>(ToggleBookmark)
        nmap <leader>fm <Action>(ActivateBookmarksToolWindow)

        "" Expanding and collapsing
        nmap zc <Action>(CollapseRegion)
        nmap zo <Action>(ExpandRegion)
        nmap zC <Action>(CollapseAllRegions)
        nmap zO <Action>(ExpandAllRegions)

        "" Debug
        nmap <leader>dd <Action>(Debug)
        nmap <leader>dn <Action>(StepOver)
        nmap <leader>do <Action>(StepOut)
        nmap <leader>di <Action>(StepInto)
        nmap <leader>dr <Action>(Resume)
        nmap <leader>ds <Action>(Stop)
        nmap <leader>dc <Action>(RunToCursor)
        map <leader>de <Action>(EvaluateExpression)
        nmap <leader>db <Action>(ToggleLineBreakpoint)
        nmap <leader>dt <Action>(XDebugger.MuteBreakpoints)
        nmap <leader>fb <Action>(ViewBreakpoints)

        "" Others
        nmap K <Action>(ShowHoverInfo)
        nmap [d <Action>(GotoPreviousError)
        nmap ]d <Action>(GotoNextError)
        map <C-k> <Action>(ParameterInfo)
        nmap <leader>cr <Action>(CopyReference)
        nmap <leader>qi <Action>(QuickImplementations)
        nmap <leader>qt <Action>(ExpressionTypeInfo)

        "" Quick lists
        nmap <leader>sw <Action>(QuickList.Look at all those windows)
        nmap <leader>sd <Action>(QuickList.To ne dela?)
        map <leader>si <Action>(QuickList.Code police)
        nmap <leader>se <Action>(QuickList.It's leviOsa, not levioSA!)

        " Git
        nmap ]g <Action>(VcsShowNextChangeMarker)
        nmap [g <Action>(VcsShowPrevChangeMarker)
        nmap <leader>gd <Action>(Vcs.ShowDiffChangedLines)
        nmap <leader>gb <Action>(Annotate)
        nmap <leader>gh <Action>(Vcs.ShowTabbedFileHistory)

        nmap <D-l> <Action>(NextProjectWindow)
        " ======================================================================
endif
